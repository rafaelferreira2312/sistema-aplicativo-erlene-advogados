// Schema Prisma Preliminar - Sistema Erlene Advogados
// Gerado automaticamente baseado na an√°lise do Laravel
// Data: 2025-09-19 16:03:28

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ========================================
// MODELOS PRINCIPAIS - BASEADOS NO LARAVEL
// ========================================

model User {
  id            Int       @id @default(autoincrement())
  nome          String?   
  email         String    @unique
  password      String
  cpf           String?
  oab           String?
  telefone      String?
  perfil        String?   @default("advogado")
  unidade_id    Int?
  status        String?   @default("ativo")
  ultimo_acesso DateTime?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  
  // Relacionamentos
  unidade       Unidade?  @relation(fields: [unidade_id], references: [id])
  clientes      Cliente[]
  processos     Processo[]
  atendimentos  Atendimento[]
  tarefas       Tarefa[]
  
  @@map("users")
}

model Unidade {
  id         Int      @id @default(autoincrement())
  nome       String
  codigo     String?
  endereco   String?
  cidade     String?
  estado     String?
  cep        String?
  telefone   String?
  email      String?
  cnpj       String?
  status     String?  @default("ativo")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  
  // Relacionamentos
  users      User[]
  clientes   Cliente[]
  processos  Processo[]
  
  @@map("unidades")
}

model Cliente {
  id           Int       @id @default(autoincrement())
  nome         String
  cpf_cnpj     String    @unique
  tipo_pessoa  String?   @default("fisica")
  email        String?
  telefone     String?
  endereco     String?
  cep          String?
  cidade       String?
  estado       String?
  observacoes  String?   @db.Text
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  deleted_at   DateTime?
  
  // Relacionamentos
  processos    Processo[]
  atendimentos Atendimento[]
  documentos   DocumentoGed[]
  financeiro   Financeiro[]
  audiencias   Audiencia[]
  mensagens    Mensagem[]
  
  @@map("clientes")
}

model Processo {
  id                Int       @id @default(autoincrement())
  numero            String    @unique
  tribunal          String?
  vara              String?
  cliente_id        Int
  tipo_acao         String?
  status            String?   @default("ativo")
  valor_causa       Decimal?  @db.Decimal(15,2)
  data_distribuicao DateTime?
  advogado_id       Int?
  unidade_id        Int?
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  
  // Relacionamentos
  cliente       Cliente        @relation(fields: [cliente_id], references: [id])
  advogado      User?          @relation(fields: [advogado_id], references: [id])
  unidade       Unidade?       @relation(fields: [unidade_id], references: [id])
  movimentacoes Movimentacao[]
  atendimentos  Atendimento[]
  tarefas       Tarefa[]
  audiencias    Audiencia[]
  kanban_cards  KanbanCard[]
  
  @@map("processos")
}

model Atendimento {
  id             Int       @id @default(autoincrement())
  cliente_id     Int
  advogado_id    Int?
  data_hora      DateTime
  tipo           String?
  assunto        String?
  descricao      String?   @db.Text
  status         String?   @default("agendado")
  duracao        Int?      // minutos
  valor          Decimal?  @db.Decimal(10,2)
  proximos_passos String?  @db.Text
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  
  // Relacionamentos
  cliente     Cliente      @relation(fields: [cliente_id], references: [id])
  advogado    User?        @relation(fields: [advogado_id], references: [id])
  processos   Processo[]   // Many-to-many via pivot table
  financeiro  Financeiro[]
  
  @@map("atendimentos")
}

model Financeiro {
  id               Int       @id @default(autoincrement())
  processo_id      Int?
  atendimento_id   Int?
  cliente_id       Int
  tipo             String    // "receita", "despesa"
  valor            Decimal   @db.Decimal(10,2)
  data_vencimento  DateTime
  data_pagamento   DateTime?
  status           String    @default("pendente")
  descricao        String?
  gateway          String?   // "stripe", "mercadopago"
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt
  
  // Relacionamentos
  cliente           Cliente              @relation(fields: [cliente_id], references: [id])
  processo          Processo?            @relation(fields: [processo_id], references: [id])
  atendimento       Atendimento?         @relation(fields: [atendimento_id], references: [id])
  pagamentos_stripe PagamentoStripe[]
  pagamentos_mp     PagamentoMercadoPago[]
  
  @@map("financeiro")
}

model Audiencia {
  id          Int       @id @default(autoincrement())
  processo_id Int
  cliente_id  Int
  advogado_id Int?
  unidade_id  Int?
  tipo        String?
  data        DateTime
  hora        String?
  local       String?
  endereco    String?
  sala        String?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  
  // Relacionamentos
  processo  Processo  @relation(fields: [processo_id], references: [id])
  cliente   Cliente   @relation(fields: [cliente_id], references: [id])
  advogado  User?     @relation(fields: [advogado_id], references: [id])
  
  @@map("audiencias")
}

// ========================================
// MODELOS AUXILIARES
// ========================================

model Movimentacao {
  id          Int       @id @default(autoincrement())
  processo_id Int
  data        DateTime
  descricao   String    @db.Text
  tipo        String?
  documento_url String?
  metadata    Json?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  
  // Relacionamentos
  processo  Processo  @relation(fields: [processo_id], references: [id])
  
  @@map("movimentacoes")
}

model DocumentoGed {
  id            Int       @id @default(autoincrement())
  cliente_id    Int
  pasta         String?
  nome_arquivo  String
  nome_original String
  caminho       String
  tipo_arquivo  String?
  mime_type     String?
  tamanho       Int?
  data_upload   DateTime  @default(now())
  usuario_id    Int?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  
  // Relacionamentos
  cliente  Cliente  @relation(fields: [cliente_id], references: [id])
  
  @@map("documentos_ged")
}

model Tarefa {
  id               Int       @id @default(autoincrement())
  titulo           String
  descricao        String?   @db.Text
  tipo             String?
  status           String?   @default("pendente")
  prazo            DateTime?
  responsavel_id   Int?
  cliente_id       Int?
  processo_id      Int?
  kanban_posicao   Int?
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt
  
  // Relacionamentos
  responsavel  User?     @relation(fields: [responsavel_id], references: [id])
  cliente      Cliente?  @relation(fields: [cliente_id], references: [id])
  processo     Processo? @relation(fields: [processo_id], references: [id])
  
  @@map("tarefas")
}

model KanbanColuna {
  id         Int          @id @default(autoincrement())
  nome       String
  ordem      Int
  cor        String?
  unidade_id Int?
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  
  // Relacionamentos
  cards  KanbanCard[]
  
  @@map("kanban_colunas")
}

model KanbanCard {
  id             Int       @id @default(autoincrement())
  titulo         String
  descricao      String?   @db.Text
  coluna_id      Int
  processo_id    Int?
  tarefa_id      Int?
  posicao        Int?
  prioridade     String?   @default("media")
  prazo          DateTime?
  responsavel_id Int?
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  
  // Relacionamentos
  coluna   KanbanColuna  @relation(fields: [coluna_id], references: [id])
  processo Processo?     @relation(fields: [processo_id], references: [id])
  
  @@map("kanban_cards")
}

model Mensagem {
  id               Int       @id @default(autoincrement())
  remetente_id     Int?
  destinatario_id  Int?
  cliente_id       Int?
  processo_id      Int?
  conteudo         String    @db.Text
  tipo             String?   @default("texto")
  arquivo_url      String?
  data_envio       DateTime  @default(now())
  lida             Boolean   @default(false)
  data_leitura     DateTime?
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt
  
  // Relacionamentos
  cliente  Cliente?  @relation(fields: [cliente_id], references: [id])
  
  @@map("mensagens")
}

// ========================================
// MODELOS DE PAGAMENTO
// ========================================

model PagamentoStripe {
  id                      Int       @id @default(autoincrement())
  cliente_id              Int?
  processo_id             Int?
  atendimento_id          Int?
  financeiro_id           Int?
  valor                   Decimal   @db.Decimal(10,2)
  moeda                   String    @default("brl")
  status                  String    @default("pending")
  stripe_payment_intent_id String?
  stripe_customer_id      String?
  stripe_charge_id        String?
  created_at              DateTime  @default(now())
  updated_at              DateTime  @updatedAt
  
  // Relacionamentos
  financeiro  Financeiro?  @relation(fields: [financeiro_id], references: [id])
  
  @@map("pagamentos_stripe")
}

model PagamentoMercadoPago {
  id                   Int       @id @default(autoincrement())
  cliente_id           Int?
  processo_id          Int?
  atendimento_id       Int?
  financeiro_id        Int?
  valor                Decimal   @db.Decimal(10,2)
  tipo                 String?
  status               String    @default("pending")
  mp_payment_id        String?
  mp_preference_id     String?
  mp_external_reference String?
  created_at           DateTime  @default(now())
  updated_at           DateTime  @updatedAt
  
  // Relacionamentos
  financeiro  Financeiro?  @relation(fields: [financeiro_id], references: [id])
  
  @@map("pagamentos_mp")
}

// ========================================
// MODELOS DE INTEGRA√á√ÉO
// ========================================

model Tribunal {
  id                   Int       @id @default(autoincrement())
  nome                 String
  codigo               String    @unique
  url_consulta         String?
  tipo                 String?
  estado               String?
  config_api           Json?
  ativo                Boolean   @default(true)
  limite_consultas_dia Int?      @default(100)
  created_at           DateTime  @default(now())
  updated_at           DateTime  @updatedAt
  
  @@map("tribunais")
}

model Integracao {
  id                    Int       @id @default(autoincrement())
  nome                  String
  ativo                 Boolean   @default(false)
  configuracoes         Json?
  ultima_sincronizacao  DateTime?
  status                String?   @default("inativo")
  ultimo_erro           String?
  total_requisicoes     Int       @default(0)
  requisicoes_sucesso   Int       @default(0)
  requisicoes_erro      Int       @default(0)
  unidade_id            Int?
  created_at            DateTime  @default(now())
  updated_at            DateTime  @updatedAt
  
  @@map("integracoes")
}

model LogSistema {
  id         Int       @id @default(autoincrement())
  nivel      String    // "info", "warning", "error"
  categoria  String?
  mensagem   String    @db.Text
  contexto   Json?
  usuario_id Int?
  cliente_id Int?
  ip         String?
  user_agent String?
  request_id String?
  data_hora  DateTime  @default(now())
  created_at DateTime  @default(now())
  
  @@map("logs_sistema")
}
