#!/bin/bash

# Script 144 - Investigar erro 401 espec√≠fico em POST
# Sistema Erlene Advogados - Diagnosticar diferen√ßa GET vs POST
# Data: $(date +%Y-%m-%d)
# EXECUTE DENTRO DA PASTA: backend/

echo "üîç Script 144 - Investigando erro 401 em POST audi√™ncias..."

# Verificar se estamos no diret√≥rio correto
if [ ! -f "composer.json" ]; then
    echo "‚ùå Erro: Execute este script dentro da pasta backend/"
    echo "üìù Comando correto:"
    echo "   cd backend"
    echo "   chmod +x 144-investigate-post-401.sh && ./144-investigate-post-401.sh"
    exit 1
fi

echo "üîç PROBLEMA IDENTIFICADO:"
echo "   ‚úÖ GET /admin/audiencias ‚Üí 200 OK (funciona)"
echo "   ‚úÖ GET /admin/audiencias/dashboard/stats ‚Üí 200 OK (funciona)"
echo "   ‚ùå POST /admin/audiencias ‚Üí 401 Unauthorized (falha)"
echo ""

echo "1Ô∏è‚É£ Investigando rotas de audi√™ncias em routes/api.php..."

if [ -f "routes/api.php" ]; then
    echo "üìã Rotas encontradas para audi√™ncias:"
    grep -n -A5 -B5 "audiencia" routes/api.php
    echo ""
    
    echo "üìã Middleware aplicado nas rotas de audi√™ncias:"
    grep -n "middleware.*auth" routes/api.php
    echo ""
else
    echo "‚ùå routes/api.php n√£o encontrado"
fi

echo "2Ô∏è‚É£ Verificando se controller AudienciaController existe..."

CONTROLLER_PATH=""
if [ -f "app/Http/Controllers/Api/Admin/AudienciaController.php" ]; then
    CONTROLLER_PATH="app/Http/Controllers/Api/Admin/AudienciaController.php"
elif [ -f "app/Http/Controllers/Admin/AudienciaController.php" ]; then
    CONTROLLER_PATH="app/Http/Controllers/Admin/AudienciaController.php"
elif [ -f "app/Http/Controllers/AudienciaController.php" ]; then
    CONTROLLER_PATH="app/Http/Controllers/AudienciaController.php"
fi

if [ -n "$CONTROLLER_PATH" ]; then
    echo "‚úÖ Controller encontrado: $CONTROLLER_PATH"
    echo ""
    echo "üìã M√©todos dispon√≠veis no controller:"
    grep -n "public function" "$CONTROLLER_PATH"
    echo ""
    
    echo "üìã M√©todo store (POST) encontrado?"
    grep -n -A10 "public function store" "$CONTROLLER_PATH" || echo "‚ùå M√©todo store N√ÉO encontrado"
    echo ""
else
    echo "‚ùå AudienciaController N√ÉO encontrado"
    echo "üìã Controllers dispon√≠veis em app/Http/Controllers:"
    find app/Http/Controllers -name "*Controller.php" | head -10
fi

echo "3Ô∏è‚É£ Comparando com controller funcional (ClientController)..."

CLIENT_CONTROLLER=""
if [ -f "app/Http/Controllers/Api/Admin/ClientController.php" ]; then
    CLIENT_CONTROLLER="app/Http/Controllers/Api/Admin/ClientController.php"
elif [ -f "app/Http/Controllers/Admin/ClientController.php" ]; then
    CLIENT_CONTROLLER="app/Http/Controllers/Admin/ClientController.php"
fi

if [ -n "$CLIENT_CONTROLLER" ]; then
    echo "‚úÖ ClientController encontrado: $CLIENT_CONTROLLER"
    echo ""
    echo "üìã Middleware no ClientController:"
    grep -n "middleware\|auth" "$CLIENT_CONTROLLER" | head -5
    echo ""
    echo "üìã M√©todo store no ClientController:"
    grep -n -A5 "public function store" "$CLIENT_CONTROLLER" || echo "‚ùå store n√£o encontrado"
    echo ""
else
    echo "‚ùå ClientController n√£o encontrado para compara√ß√£o"
fi

echo "4Ô∏è‚É£ Verificando middleware espec√≠fico de audi√™ncias..."

if [ -d "app/Http/Middleware" ]; then
    echo "üìã Middleware relacionado a audi√™ncias:"
    find app/Http/Middleware -name "*[Aa]udien*" || echo "   Nenhum middleware espec√≠fico"
    echo ""
fi

echo "5Ô∏è‚É£ Verificando Model Audiencia..."

MODEL_PATH=""
if [ -f "app/Models/Audiencia.php" ]; then
    MODEL_PATH="app/Models/Audiencia.php"
fi

if [ -n "$MODEL_PATH" ]; then
    echo "‚úÖ Model encontrado: $MODEL_PATH"
    echo ""
    echo "üìã Propriedades fillable:"
    grep -n -A10 "fillable" "$MODEL_PATH"
    echo ""
else
    echo "‚ùå Model Audiencia N√ÉO encontrado"
fi

echo "6Ô∏è‚É£ Verificando tabela audiencias na migration..."

echo "üìã Migrations de audi√™ncias:"
find database/migrations -name "*audien*" -o -name "*create_audiencias*" || echo "   Nenhuma migration encontrada"

echo ""
echo "7Ô∏è‚É£ Testando endpoint POST com curl..."

echo "üìã Teste b√°sico POST (sem autentica√ß√£o):"
curl -s -o /dev/null -w "HTTP Status: %{http_code}\n" \
  -X POST \
  -H "Content-Type: application/json" \
  -d '{"test": "data"}' \
  http://localhost:8000/api/admin/audiencias

echo ""
echo "üìã Verificando se backend est√° rodando:"
curl -s -o /dev/null -w "Backend Status: %{http_code}\n" http://localhost:8000/api/health 2>/dev/null || echo "Backend pode n√£o estar rodando"

echo ""
echo "8Ô∏è‚É£ POSS√çVEIS CAUSAS DO PROBLEMA:"
echo "   1. ‚ùì Controller AudienciaController n√£o existe ou est√° incompleto"
echo "   2. ‚ùì M√©todo store() n√£o implementado no controller"
echo "   3. ‚ùì Rotas POST n√£o configuradas corretamente"
echo "   4. ‚ùì Middleware de autentica√ß√£o espec√≠fico para POST"
echo "   5. ‚ùì Model Audiencia n√£o existe ou mal configurado"
echo "   6. ‚ùì Migration n√£o executada (tabela n√£o existe)"
echo ""

echo "9Ô∏è‚É£ PR√ìXIMOS PASSOS RECOMENDADOS:"
echo "   1. Verificar se backend tem controller completo"
echo "   2. Comparar rotas com m√≥dulo funcional (clientes)"
echo "   3. Verificar se tabela audiencias existe no banco"
echo "   4. Testar endpoint direto com Postman/curl"
echo ""

echo "‚úÖ Investiga√ß√£o conclu√≠da!"
echo ""
echo "üìù Para continuar investiga√ß√£o no frontend:"
echo "   cd frontend && ./138-investigate-frontend-module.sh audiencias"