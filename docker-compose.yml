services:
  # PHP-FPM Backend
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: erlene-php
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
      - ./docker/php/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
    environment:
      - PHP_IDE_CONFIG=serverName=erlene-docker
    networks:
      - erlene-network
    depends_on:
      - mysql
      - redis

  # Nginx Web Server
  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    container_name: erlene-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./backend:/var/www/html
      - ./frontend/build:/var/www/frontend
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./storage/logs/nginx:/var/log/nginx
    networks:
      - erlene-network
    depends_on:
      - php

  # MySQL Database
  mysql:
    build:
      context: .
      dockerfile: docker/mysql/Dockerfile
    container_name: erlene-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: erlene_root_password
      MYSQL_DATABASE: erlene_advogados
      MYSQL_USER: erlene_user
      MYSQL_PASSWORD: erlene_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf
      - ./storage/backups/mysql:/backups
    networks:
      - erlene-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: erlene-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass erlene_redis_password
    volumes:
      - redis_data:/data
    networks:
      - erlene-network

  # Node.js para Frontend
  node:
    build:
      context: .
      dockerfile: docker/node/Dockerfile
    container_name: erlene-node
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8080/api
    networks:
      - erlene-network
    command: npm start

  # Mailpit (Email Testing)
  mailpit:
    image: axllent/mailpit:latest
    container_name: erlene-mailpit
    restart: unless-stopped
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - erlene-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  node_modules:
    driver: local

networks:
  erlene-network:
    driver: bridge
