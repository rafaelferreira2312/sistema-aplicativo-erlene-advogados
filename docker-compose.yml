version: '3.8'

services:
  # MySQL Database - Porta Alta
  mysql:
    image: mysql:8.0
    container_name: erlene_mysql
    restart: unless-stopped
    ports:
      - "33006:3306"  # Porta alta para MySQL
    environment:
      MYSQL_DATABASE: erlene_advogados
      MYSQL_ROOT_PASSWORD: erlene2024@root
      MYSQL_USER: erlene_user
      MYSQL_PASSWORD: erlene2024@user
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - erlene_network

  # PHP/Laravel Backend - Porta Alta
  backend:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: erlene_backend
    restart: unless-stopped
    ports:
      - "9001:9000"  # Porta alta para PHP-FPM
    volumes:
      - ./backend:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - mysql
    networks:
      - erlene_network
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=erlene_advogados
      - DB_USERNAME=erlene_user
      - DB_PASSWORD=erlene2024@user

  # Nginx Web Server - Porta Alta
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: erlene_nginx
    restart: unless-stopped
    ports:
      - "8080:80"   # Porta alta para HTTP
      - "8443:443"  # Porta alta para HTTPS
    volumes:
      - ./backend:/var/www/html
      - ./frontend/build:/var/www/frontend
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/ssl/certs
    depends_on:
      - backend
    networks:
      - erlene_network

  # React Frontend (Desenvolvimento)
  frontend:
    build:
      context: ./docker/node
      dockerfile: Dockerfile
    container_name: erlene_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"  # Porta padr√£o React (dev)
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - erlene_network
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
      - CHOKIDAR_USEPOLLING=true

  # Redis Cache (Opcional)
  # redis:
  #   image: redis:7-alpine
  #   container_name: erlene_redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - erlene_network

volumes:
  mysql_data:

networks:
  erlene_network:
    driver: bridge
