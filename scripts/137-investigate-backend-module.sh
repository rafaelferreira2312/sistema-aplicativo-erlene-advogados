#!/bin/bash

# Script 137 - Investiga√ß√£o Backend M√≥dulo (GEN√âRICO)
# Sistema Erlene Advogados - Mapeamento completo de qualquer m√≥dulo
# Data: $(date +%Y-%m-%d)
# EXECUTE DENTRO DA PASTA: backend/
# USO: ./137-investigate-backend-module.sh audiencias

echo "üîç Script 137 - Investiga√ß√£o Backend M√≥dulo..."

# Verificar se foi passado o par√¢metro
if [ $# -eq 0 ]; then
    echo "‚ùå Erro: Informe o nome do m√≥dulo a investigar"
    echo "üìù Uso correto:"
    echo "   cd backend"
    echo "   chmod +x 137-investigate-backend-module.sh && ./137-investigate-backend-module.sh audiencias"
    echo "   chmod +x 137-investigate-backend-module.sh && ./137-investigate-backend-module.sh prazos"
    echo "   chmod +x 137-investigate-backend-module.sh && ./137-investigate-backend-module.sh atendimentos"
    exit 1
fi

MODULE_NAME="$1"
MODULE_NAME_UPPER="$(echo $MODULE_NAME | tr '[:lower:]' '[:upper:]')"
MODULE_NAME_LOWER="$(echo $MODULE_NAME | tr '[:upper:]' '[:lower:]')"
MODULE_NAME_SINGULAR=""

# Verificar se estamos no diret√≥rio correto
if [ ! -f "composer.json" ]; then
    echo "‚ùå Erro: Execute este script dentro da pasta backend/"
    exit 1
fi

# Fun√ß√£o para obter singular (b√°sico)
get_singular() {
    case "$1" in
        "audiencias") echo "audiencia" ;;
        "prazos") echo "prazo" ;;
        "atendimentos") echo "atendimento" ;;
        "processos") echo "processo" ;;
        "clientes") echo "cliente" ;;
        "financeiro") echo "financeiro" ;;
        *) echo "$1" ;;
    esac
}

MODULE_NAME_SINGULAR=$(get_singular "$MODULE_NAME_LOWER")

echo "==================== RELAT√ìRIO DE INVESTIGA√á√ÉO BACKEND ===================="
echo "M√≥dulo: $MODULE_NAME"
echo "Singular: $MODULE_NAME_SINGULAR"
echo "Data: $(date)"
echo "Objetivo: Mapear todos os arquivos relacionados ao m√≥dulo $MODULE_NAME"
echo ""

# Criar arquivo de relat√≥rio
REPORT_FILE="investigation_report_backend_${MODULE_NAME_LOWER}.txt"
echo "üìù Gerando relat√≥rio: $REPORT_FILE"

{
    echo "RELAT√ìRIO DE INVESTIGA√á√ÉO BACKEND - $MODULE_NAME"
    echo "================================================"
    echo "Data: $(date)"
    echo ""

    echo "1Ô∏è‚É£ ESTRUTURA DE PASTAS"
    echo "======================"
    echo "Procurando pastas relacionadas a: $MODULE_NAME, $MODULE_NAME_SINGULAR"
    find . -type d -iname "*${MODULE_NAME_LOWER}*" -o -type d -iname "*${MODULE_NAME_SINGULAR}*" 2>/dev/null
    echo ""

    echo "2Ô∏è‚É£ MODELS"
    echo "=========="
    echo "Procurando models em app/Models/:"
    find app/Models/ -type f -iname "*${MODULE_NAME_SINGULAR}*" 2>/dev/null
    find app/Models/ -type f -iname "*${MODULE_NAME_LOWER}*" 2>/dev/null
    echo ""
    echo "Conte√∫do dos models encontrados:"
    for model_file in $(find app/Models/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" 2>/dev/null); do
        echo "--- ARQUIVO: $model_file ---"
        if [ -f "$model_file" ]; then
            head -50 "$model_file"
        else
            echo "Arquivo n√£o encontrado"
        fi
        echo ""
    done

    echo "3Ô∏è‚É£ CONTROLLERS"
    echo "=============="
    echo "Procurando controllers:"
    find app/Http/Controllers/ -type f -iname "*${MODULE_NAME_SINGULAR}*" 2>/dev/null
    find app/Http/Controllers/ -type f -iname "*${MODULE_NAME_LOWER}*" 2>/dev/null
    echo ""
    echo "Conte√∫do dos controllers encontrados:"
    for controller_file in $(find app/Http/Controllers/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" 2>/dev/null); do
        echo "--- ARQUIVO: $controller_file ---"
        if [ -f "$controller_file" ]; then
            head -100 "$controller_file"
        else
            echo "Arquivo n√£o encontrado"
        fi
        echo ""
    done

    echo "4Ô∏è‚É£ MIGRATIONS"
    echo "============="
    echo "Procurando migrations:"
    find database/migrations/ -type f -iname "*${MODULE_NAME_SINGULAR}*" 2>/dev/null
    find database/migrations/ -type f -iname "*${MODULE_NAME_LOWER}*" 2>/dev/null
    echo ""

    echo "5Ô∏è‚É£ SEEDERS"
    echo "=========="
    echo "Procurando seeders:"
    find database/seeders/ -type f -iname "*${MODULE_NAME_SINGULAR}*" 2>/dev/null
    find database/seeders/ -type f -iname "*${MODULE_NAME_LOWER}*" 2>/dev/null
    echo ""

    echo "6Ô∏è‚É£ ROTAS (routes/api.php)"
    echo "========================="
    echo "Procurando rotas relacionadas ao m√≥dulo:"
    if [ -f "routes/api.php" ]; then
        grep -n -i "$MODULE_NAME_LOWER\|$MODULE_NAME_SINGULAR" routes/api.php
    else
        echo "Arquivo routes/api.php n√£o encontrado"
    fi
    echo ""

    echo "7Ô∏è‚É£ SERVICES"
    echo "==========="
    echo "Procurando services:"
    find app/Services/ -type f -iname "*${MODULE_NAME_SINGULAR}*" 2>/dev/null
    find app/Services/ -type f -iname "*${MODULE_NAME_LOWER}*" 2>/dev/null
    echo ""

    echo "8Ô∏è‚É£ REQUESTS"
    echo "==========="
    echo "Procurando form requests:"
    find app/Http/Requests/ -type f -iname "*${MODULE_NAME_SINGULAR}*" 2>/dev/null
    find app/Http/Requests/ -type f -iname "*${MODULE_NAME_LOWER}*" 2>/dev/null
    echo ""

    echo "9Ô∏è‚É£ RECURSOS (Resources)"
    echo "======================="
    echo "Procurando API resources:"
    find app/Http/Resources/ -type f -iname "*${MODULE_NAME_SINGULAR}*" 2>/dev/null
    find app/Http/Resources/ -type f -iname "*${MODULE_NAME_LOWER}*" 2>/dev/null
    echo ""

    echo "üîü MIDDLEWARE ESPEC√çFICO"
    echo "======================="
    echo "Procurando middlewares espec√≠ficos:"
    find app/Http/Middleware/ -type f -iname "*${MODULE_NAME_SINGULAR}*" 2>/dev/null
    find app/Http/Middleware/ -type f -iname "*${MODULE_NAME_LOWER}*" 2>/dev/null
    echo ""

    echo "1Ô∏è‚É£1Ô∏è‚É£ TODOS OS ARQUIVOS RELACIONADOS"
    echo "=================================="
    echo "Busca geral por qualquer arquivo que contenha o nome do m√≥dulo:"
    find . -type f -iname "*${MODULE_NAME_LOWER}*" -o -iname "*${MODULE_NAME_SINGULAR}*" | head -20
    echo ""

    echo "1Ô∏è‚É£2Ô∏è‚É£ VERIFICA√á√ÉO DE TABELA NO BANCO"
    echo "==================================="
    echo "Verificando se existe tabela no banco (via migration):"
    if [ -f ".env" ]; then
        echo "Arquivo .env encontrado - configura√ß√µes de banco:"
        grep "DB_" .env
    else
        echo "Arquivo .env n√£o encontrado"
    fi
    echo ""

    echo "1Ô∏è‚É£3Ô∏è‚É£ AN√ÅLISE DE DEPEND√äNCIAS"
    echo "============================"
    echo "Procurando referencias ao m√≥dulo em outros arquivos:"
    grep -r -l "$MODULE_NAME_LOWER\|$MODULE_NAME_SINGULAR" app/ --include="*.php" | head -10
    echo ""

} > "$REPORT_FILE"

echo ""
echo "‚úÖ Relat√≥rio gerado: $REPORT_FILE"
echo ""
echo "üìã RESUMO DA INVESTIGA√á√ÉO:"
echo "=========================="

# Mostrar resumo na tela
echo "üìÅ Pastas encontradas:"
find . -type d -iname "*${MODULE_NAME_LOWER}*" -o -type d -iname "*${MODULE_NAME_SINGULAR}*" 2>/dev/null || echo "   Nenhuma pasta espec√≠fica encontrada"

echo ""
echo "üìÑ Models encontrados:"
find app/Models/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" 2>/dev/null || echo "   Nenhum model encontrado"

echo ""
echo "üéõÔ∏è Controllers encontrados:"
find app/Http/Controllers/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" 2>/dev/null || echo "   Nenhum controller encontrado"

echo ""
echo "üóÑÔ∏è Migrations encontradas:"
find database/migrations/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" 2>/dev/null || echo "   Nenhuma migration encontrada"

echo ""
echo "üå± Seeders encontrados:"
find database/seeders/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" 2>/dev/null || echo "   Nenhum seeder encontrado"

echo ""
echo "üõ£Ô∏è Rotas em routes/api.php:"
if [ -f "routes/api.php" ]; then
    grep -n -i "$MODULE_NAME_LOWER\|$MODULE_NAME_SINGULAR" routes/api.php || echo "   Nenhuma rota encontrada"
else
    echo "   Arquivo routes/api.php n√£o encontrado"
fi

echo ""
echo "==================== FIM DA INVESTIGA√á√ÉO ===================="
echo ""
echo "üìù PR√ìXIMOS PASSOS:"
echo "1. Revisar o relat√≥rio completo: cat $REPORT_FILE"
echo "2. Executar script de investiga√ß√£o do frontend"
echo "3. Comparar com m√≥dulos funcionais (processos, clientes)"
echo "4. Identificar o que est√° faltando para o m√≥dulo $MODULE_NAME"
echo ""
echo "üîÑ Para investigar outro m√≥dulo:"
echo "   ./137-investigate-backend-module.sh prazos"
echo "   ./137-investigate-backend-module.sh atendimentos"