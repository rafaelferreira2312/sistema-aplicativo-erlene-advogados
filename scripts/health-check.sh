#!/bin/bash

# Verificar sa√∫de de todos os servi√ßos
echo "üîç Verificando sa√∫de dos servi√ßos..."

# Verificar containers
echo "üì¶ Status dos containers:"
docker-compose ps

# Verificar API
echo ""
echo "üîó Verificando API..."
if curl -f -s http://localhost:8080/health > /dev/null; then
    echo "‚úÖ API: Funcionando"
    # Testar endpoint protegido
    API_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/api/admin/dashboard)
    if [ "$API_RESPONSE" = "401" ]; then
        echo "‚úÖ Autentica√ß√£o: Funcionando (401 esperado sem token)"
    else
        echo "‚ö†Ô∏è  Autentica√ß√£o: Status $API_RESPONSE"
    fi
else
    echo "‚ùå API: N√£o est√° respondendo"
fi

# Verificar MySQL
echo ""
echo "üóÑÔ∏è Verificando MySQL..."
if docker-compose exec mysql mysqladmin ping -h"localhost" --silent; then
    echo "‚úÖ MySQL: Funcionando"
else
    echo "‚ùå MySQL: N√£o est√° respondendo"
fi

# Verificar Redis
echo ""
echo "üî¥ Verificando Redis..."
if docker-compose exec redis redis-cli ping | grep -q "PONG"; then
    echo "‚úÖ Redis: Funcionando"
else
    echo "‚ùå Redis: N√£o est√° respondendo"
fi

# Verificar espa√ßo em disco
echo ""
echo "üíæ Verificando espa√ßo em disco:"
df -h | grep -E "Filesystem|/dev/"

# Verificar logs de erro
echo ""
echo "üìù √öltimos logs de erro:"
if [ -f storage/logs/nginx/error.log ]; then
    tail -n 5 storage/logs/nginx/error.log
else
    echo "Nenhum log de erro encontrado"
fi

echo ""
echo "‚úÖ Verifica√ß√£o de sa√∫de conclu√≠da!"
