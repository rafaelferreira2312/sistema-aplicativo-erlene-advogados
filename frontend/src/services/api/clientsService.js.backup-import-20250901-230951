import { api } from './api';

const apiClient = api;

export const clientsService = {
  // Buscar todos os clientes
  async getAll(params = {}) {
    try {
      const response = await apiClient.get('/admin/clients', { params });
      return {
        success: true,
        data: response.data.data || response.data,
        pagination: response.data.pagination || null
      };
    } catch (error) {
      console.error('Erro ao buscar clientes:', error);
      return {
        success: false,
        error: error.response?.data?.message || 'Erro ao buscar clientes'
      };
    }
  },

  // Criar cliente
  async create(data) {
    try {
      const response = await apiClient.post('/admin/clients', data);
      return {
        success: true,
        data: response.data.data || response.data
      };
    } catch (error) {
      console.error('Erro ao criar cliente:', error);
      return {
        success: false,
        error: error.response?.data?.message || 'Erro ao criar cliente',
        errors: error.response?.data?.errors || {}
      };
    }
  },

  // Atualizar cliente
  async update(id, data) {
    try {
      const response = await apiClient.put(`/admin/clients/${id}`, data);
      return {
        success: true,
        data: response.data.data || response.data
      };
    } catch (error) {
      console.error('Erro ao atualizar cliente:', error);
      return {
        success: false,
        error: error.response?.data?.message || 'Erro ao atualizar cliente',
        errors: error.response?.data?.errors || {}
      };
    }
  },

  // Buscar cliente por ID
  async getById(id) {
    try {
      const response = await apiClient.get(`/admin/clients/${id}`);
      return {
        success: true,
        data: response.data.data || response.data
      };
    } catch (error) {
      console.error('Erro ao buscar cliente:', error);
      return {
        success: false,
        error: error.response?.data?.message || 'Cliente não encontrado'
      };
    }
  },

  // Deletar cliente
  async delete(id) {
    try {
      await apiClient.delete(`/admin/clients/${id}`);
      return {
        success: true,
        message: 'Cliente deletado com sucesso'
      };
    } catch (error) {
      console.error('Erro ao deletar cliente:', error);
      return {
        success: false,
        error: error.response?.data?.message || 'Erro ao deletar cliente'
      };
    }
  },

  // Buscar responsáveis
  async getResponsaveis() {
    try {
      const response = await apiClient.get('/admin/clients/responsaveis');
      return {
        success: true,
        data: response.data.data || response.data
      };
    } catch (error) {
      console.error('Erro ao buscar responsáveis:', error);
      return {
        success: false,
        error: error.response?.data?.message || 'Erro ao buscar responsáveis'
      };
    }
  },

  // Buscar CEP
  async buscarCep(cep) {
    try {
      const response = await apiClient.get(`/admin/clients/buscar-cep/${cep}`);
      return {
        success: true,
        data: response.data
      };
    } catch (error) {
      console.error('Erro ao buscar CEP:', error);
      return {
        success: false,
        error: error.response?.data?.message || 'CEP não encontrado'
      };
    }
  },

  // Obter estatísticas
  async getStats() {
    try {
      const response = await apiClient.get('/admin/clients/stats');
      return {
        success: true,
        data: response.data.data || response.data
      };
    } catch (error) {
      console.error('Erro ao buscar estatísticas:', error);
      return {
        success: false,
        error: error.response?.data?.message || 'Erro ao buscar estatísticas'
      };
    }
  },

  // Validar CPF/CNPJ único
  async validateDocument(document, type, excludeId = null) {
    try {
      const params = { document, type };
      if (excludeId) params.exclude_id = excludeId;
      
      const response = await apiClient.get('/admin/clients/validate-document', { params });
      return {
        success: true,
        valid: response.data.valid || false
      };
    } catch (error) {
      console.error('Erro ao validar documento:', error);
      return {
        success: false,
        valid: false,
        error: error.response?.data?.message || 'Erro na validação'
      };
    }
  },

  // Obter processos do cliente
  async getClientProcessos(clienteId) {
    try {
      const response = await apiClient.get(`/admin/clients/${clienteId}/processos`);
      return response.data;
    } catch (error) {
      console.error('Erro ao buscar processos:', error);
      throw error;
    }
  },

  // Obter documentos do cliente
  async getClientDocumentos(clienteId) {
    try {
      const response = await apiClient.get(`/admin/clients/${clienteId}/documentos`);
      return response.data;
    } catch (error) {
      console.error('Erro ao buscar documentos:', error);
      throw error;
    }
  }
};

// Export default também para compatibilidade
export default clientsService;
