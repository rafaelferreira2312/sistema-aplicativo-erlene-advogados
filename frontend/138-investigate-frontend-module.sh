#!/bin/bash

# Script 138 - Investiga√ß√£o Frontend M√≥dulo (GEN√âRICO)
# Sistema Erlene Advogados - Mapeamento completo de qualquer m√≥dulo frontend
# Data: $(date +%Y-%m-%d)
# EXECUTE DENTRO DA PASTA: frontend/
# USO: ./138-investigate-frontend-module.sh audiencias

echo "üé® Script 138 - Investiga√ß√£o Frontend M√≥dulo..."

# Verificar se foi passado o par√¢metro
if [ $# -eq 0 ]; then
    echo "‚ùå Erro: Informe o nome do m√≥dulo a investigar"
    echo "üìù Uso correto:"
    echo "   cd frontend"
    echo "   chmod +x 138-investigate-frontend-module.sh && ./138-investigate-frontend-module.sh audiencias"
    echo "   chmod +x 138-investigate-frontend-module.sh && ./138-investigate-frontend-module.sh prazos"
    echo "   chmod +x 138-investigate-frontend-module.sh && ./138-investigate-frontend-module.sh atendimentos"
    exit 1
fi

MODULE_NAME="$1"
MODULE_NAME_UPPER="$(echo $MODULE_NAME | tr '[:lower:]' '[:upper:]')"
MODULE_NAME_LOWER="$(echo $MODULE_NAME | tr '[:upper:]' '[:lower:]')"
MODULE_NAME_SINGULAR=""

# Verificar se estamos no diret√≥rio correto
if [ ! -f "package.json" ]; then
    echo "‚ùå Erro: Execute este script dentro da pasta frontend/"
    exit 1
fi

# Fun√ß√£o para obter singular (b√°sico)
get_singular() {
    case "$1" in
        "audiencias") echo "audiencia" ;;
        "prazos") echo "prazo" ;;
        "atendimentos") echo "atendimento" ;;
        "processos") echo "processo" ;;
        "clientes") echo "cliente" ;;
        "financeiro") echo "financeiro" ;;
        *) echo "$1" ;;
    esac
}

# Fun√ß√£o para obter nome em ingl√™s
get_english_name() {
    case "$1" in
        "audiencias") echo "hearings" ;;
        "audiencia") echo "hearing" ;;
        "prazos") echo "deadlines" ;;
        "prazo") echo "deadline" ;;
        "atendimentos") echo "appointments" ;;
        "atendimento") echo "appointment" ;;
        "processos") echo "processes" ;;
        "processo") echo "process" ;;
        "clientes") echo "clients" ;;
        "cliente") echo "client" ;;
        "financeiro") echo "financial" ;;
        *) echo "$1" ;;
    esac
}

MODULE_NAME_SINGULAR=$(get_singular "$MODULE_NAME_LOWER")
MODULE_NAME_ENGLISH=$(get_english_name "$MODULE_NAME_LOWER")
MODULE_NAME_ENGLISH_SINGULAR=$(get_english_name "$MODULE_NAME_SINGULAR")

echo "==================== RELAT√ìRIO DE INVESTIGA√á√ÉO FRONTEND ===================="
echo "M√≥dulo: $MODULE_NAME"
echo "Singular: $MODULE_NAME_SINGULAR"
echo "Ingl√™s: $MODULE_NAME_ENGLISH / $MODULE_NAME_ENGLISH_SINGULAR"
echo "Data: $(date)"
echo "Objetivo: Mapear todos os arquivos relacionados ao m√≥dulo $MODULE_NAME"
echo ""

# Criar arquivo de relat√≥rio
REPORT_FILE="investigation_report_frontend_${MODULE_NAME_LOWER}.txt"
echo "üìù Gerando relat√≥rio: $REPORT_FILE"

{
    echo "RELAT√ìRIO DE INVESTIGA√á√ÉO FRONTEND - $MODULE_NAME"
    echo "================================================="
    echo "Data: $(date)"
    echo ""

    echo "1Ô∏è‚É£ ESTRUTURA DE PASTAS"
    echo "======================"
    echo "Procurando pastas relacionadas a: $MODULE_NAME, $MODULE_NAME_SINGULAR, $MODULE_NAME_ENGLISH"
    find src/ -type d -iname "*${MODULE_NAME_LOWER}*" -o -type d -iname "*${MODULE_NAME_SINGULAR}*" -o -type d -iname "*${MODULE_NAME_ENGLISH}*" 2>/dev/null
    echo ""

    echo "2Ô∏è‚É£ P√ÅGINAS PRINCIPAIS (src/pages/)"
    echo "=================================="
    echo "Procurando p√°ginas principais:"
    find src/pages/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" -o -iname "*${MODULE_NAME_ENGLISH}*" 2>/dev/null
    echo ""
    echo "Conte√∫do das p√°ginas encontradas (primeiras 50 linhas):"
    for page_file in $(find src/pages/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" -o -iname "*${MODULE_NAME_ENGLISH}*" 2>/dev/null); do
        echo "--- ARQUIVO: $page_file ---"
        if [ -f "$page_file" ]; then
            head -50 "$page_file"
        else
            echo "Arquivo n√£o encontrado"
        fi
        echo ""
    done

    echo "3Ô∏è‚É£ COMPONENTES (src/components/)"
    echo "================================"
    echo "Procurando componentes:"
    find src/components/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" -o -iname "*${MODULE_NAME_ENGLISH}*" 2>/dev/null
    echo ""
    echo "Pastas de componentes:"
    find src/components/ -type d -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" -o -iname "*${MODULE_NAME_ENGLISH}*" 2>/dev/null
    echo ""

    echo "4Ô∏è‚É£ SERVICES (src/services/)"
    echo "============================"
    echo "Procurando services:"
    find src/services/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" -o -iname "*${MODULE_NAME_ENGLISH}*" 2>/dev/null
    echo ""
    echo "Conte√∫do dos services encontrados:"
    for service_file in $(find src/services/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" -o -iname "*${MODULE_NAME_ENGLISH}*" 2>/dev/null); do
        echo "--- ARQUIVO: $service_file ---"
        if [ -f "$service_file" ]; then
            head -100 "$service_file"
        else
            echo "Arquivo n√£o encontrado"
        fi
        echo ""
    done

    echo "5Ô∏è‚É£ ROTAS (App.js)"
    echo "=================="
    echo "Procurando rotas relacionadas ao m√≥dulo no App.js:"
    if [ -f "src/App.js" ]; then
        grep -n -i "$MODULE_NAME_LOWER\|$MODULE_NAME_SINGULAR\|$MODULE_NAME_ENGLISH" src/App.js
    else
        echo "Arquivo src/App.js n√£o encontrado"
    fi
    echo ""

    echo "6Ô∏è‚É£ HOOKS CUSTOMIZADOS (src/hooks/)"
    echo "=================================="
    echo "Procurando hooks customizados:"
    find src/hooks/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" -o -iname "*${MODULE_NAME_ENGLISH}*" 2>/dev/null
    echo ""

    echo "7Ô∏è‚É£ CONTEXTS (src/context/)"
    echo "=========================="
    echo "Procurando contexts:"
    find src/context/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" -o -iname "*${MODULE_NAME_ENGLISH}*" 2>/dev/null
    echo ""

    echo "8Ô∏è‚É£ UTILS/HELPERS (src/utils/)"
    echo "=============================="
    echo "Procurando utilit√°rios:"
    find src/utils/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" -o -iname "*${MODULE_NAME_ENGLISH}*" 2>/dev/null
    echo ""

    echo "9Ô∏è‚É£ TIPOS/INTERFACES (src/types/)"
    echo "================================"
    echo "Procurando defini√ß√µes de tipos:"
    find src/types/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" -o -iname "*${MODULE_NAME_ENGLISH}*" 2>/dev/null
    echo ""

    echo "üîü LAYOUTS ESPEC√çFICOS (src/layouts/)"
    echo "====================================="
    echo "Procurando layouts espec√≠ficos:"
    find src/layouts/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" -o -iname "*${MODULE_NAME_ENGLISH}*" 2>/dev/null
    echo ""

    echo "1Ô∏è‚É£1Ô∏è‚É£ VERIFICA√á√ÉO DE IMPORTS/EXPORTS"
    echo "===================================="
    echo "Procurando refer√™ncias ao m√≥dulo em outros arquivos:"
    grep -r -l "$MODULE_NAME_LOWER\|$MODULE_NAME_SINGULAR\|$MODULE_NAME_ENGLISH" src/ --include="*.js" --include="*.jsx" --include="*.ts" --include="*.tsx" | head -15
    echo ""

    echo "1Ô∏è‚É£2Ô∏è‚É£ VERIFICA√á√ÉO EM PACKAGE.JSON"
    echo "================================"
    echo "Verificando depend√™ncias relacionadas:"
    if [ -f "package.json" ]; then
        grep -i "$MODULE_NAME_LOWER\|$MODULE_NAME_SINGULAR\|$MODULE_NAME_ENGLISH" package.json
    else
        echo "Arquivo package.json n√£o encontrado"
    fi
    echo ""

    echo "1Ô∏è‚É£3Ô∏è‚É£ TODOS OS ARQUIVOS RELACIONADOS"
    echo "==================================="
    echo "Busca geral por qualquer arquivo que contenha o nome do m√≥dulo:"
    find src/ -type f -iname "*${MODULE_NAME_LOWER}*" -o -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_ENGLISH}*" | head -20
    echo ""

    echo "1Ô∏è‚É£4Ô∏è‚É£ AN√ÅLISE DE NAVEGA√á√ÉO"
    echo "========================="
    echo "Verificando menu/navega√ß√£o (AdminLayout, Sidebar, etc.):"
    find src/components/layout/ -type f -name "*.js" -o -name "*.jsx" 2>/dev/null | xargs grep -l "$MODULE_NAME_LOWER\|$MODULE_NAME_SINGULAR\|$MODULE_NAME_ENGLISH" 2>/dev/null
    echo ""

    echo "1Ô∏è‚É£5Ô∏è‚É£ VERIFICA√á√ÉO DE ESTILOS"
    echo "==========================="
    echo "Procurando estilos espec√≠ficos (CSS, Tailwind):"
    find src/ -type f -name "*.css" -o -name "*.scss" -o -name "*.sass" | xargs grep -l "$MODULE_NAME_LOWER\|$MODULE_NAME_SINGULAR\|$MODULE_NAME_ENGLISH" 2>/dev/null
    echo ""

} > "$REPORT_FILE"

echo ""
echo "‚úÖ Relat√≥rio gerado: $REPORT_FILE"
echo ""
echo "üìã RESUMO DA INVESTIGA√á√ÉO:"
echo "=========================="

# Mostrar resumo na tela
echo "üìÅ Pastas encontradas:"
find src/ -type d -iname "*${MODULE_NAME_LOWER}*" -o -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_ENGLISH}*" 2>/dev/null || echo "   Nenhuma pasta espec√≠fica encontrada"

echo ""
echo "üìÑ P√°ginas encontradas:"
find src/pages/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" -o -iname "*${MODULE_NAME_ENGLISH}*" 2>/dev/null || echo "   Nenhuma p√°gina encontrada"

echo ""
echo "üéõÔ∏è Componentes encontrados:"
find src/components/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" -o -iname "*${MODULE_NAME_ENGLISH}*" 2>/dev/null || echo "   Nenhum componente encontrado"

echo ""
echo "üîß Services encontrados:"
find src/services/ -type f -iname "*${MODULE_NAME_SINGULAR}*" -o -iname "*${MODULE_NAME_LOWER}*" -o -iname "*${MODULE_NAME_ENGLISH}*" 2>/dev/null || echo "   Nenhum service encontrado"

echo ""
echo "üõ£Ô∏è Rotas no App.js:"
if [ -f "src/App.js" ]; then
    grep -n -i "$MODULE_NAME_LOWER\|$MODULE_NAME_SINGULAR\|$MODULE_NAME_ENGLISH" src/App.js || echo "   Nenhuma rota encontrada"
else
    echo "   Arquivo src/App.js n√£o encontrado"
fi

echo ""
echo "üì± Verifica√ß√£o de integra√ß√µes com m√≥dulos funcionais:"
echo "Comparando com processos e clientes que funcionam..."
if [ -f "src/services/processesService.js" ]; then
    echo "   ‚úÖ processesService.js existe"
else
    echo "   ‚ùå processesService.js N√ÉO existe"
fi

if [ -f "src/services/clientsService.js" ]; then
    echo "   ‚úÖ clientsService.js existe"
else
    echo "   ‚ùå clientsService.js N√ÉO existe"
fi

echo ""
echo "üîó Verifica√ß√£o de apiClient:"
if [ -f "src/services/apiClient.js" ]; then
    echo "   ‚úÖ apiClient.js existe"
else
    echo "   ‚ùå apiClient.js N√ÉO existe"
fi

echo ""
echo "==================== FIM DA INVESTIGA√á√ÉO ===================="
echo ""
echo "üìù PR√ìXIMOS PASSOS:"
echo "1. Revisar o relat√≥rio completo: cat $REPORT_FILE"
echo "2. Comparar com o relat√≥rio do backend"
echo "3. Identificar o que est√° faltando para integra√ß√£o"
echo "4. Analisar diferen√ßas com m√≥dulos funcionais"
echo ""
echo "üîÑ Para investigar outro m√≥dulo:"
echo "   ./138-investigate-frontend-module.sh prazos"
echo "   ./138-investigate-frontend-module.sh atendimentos"
echo ""
echo "üîß Para comparar com m√≥dulo funcional:"
echo "   ./138-investigate-frontend-module.sh processos"
echo "   ./138-investigate-frontend-module.sh clientes"